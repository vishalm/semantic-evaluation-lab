[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "semantic-evaluation-lab"
version = "1.0.0"
description = "A comprehensive laboratory for evaluating, testing, and monitoring Semantic Kernel AI applications"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Vishal Mishra", email = "vishal.mishra@example.com"}
]
keywords = [
    "semantic-kernel",
    "deepeval", 
    "llm-evaluation",
    "ai-testing",
    "load-testing",
    "monitoring",
    "observability"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "semantic-kernel>=1.0.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "deepeval>=1.0.0",
    "locust>=2.17.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-json-report>=1.5.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.1.0",
    "rich>=13.0.0"
]

[project.optional-dependencies]
dev = [
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0", 
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "pre-commit>=3.3.0"
]
test = [
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-html>=4.0.0",
    "pytest-xdist>=3.3.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.1.0"
]

[project.urls]
Homepage = "https://github.com/vishalm/semantic-evaluation-lab"
Repository = "https://github.com/vishalm/semantic-evaluation-lab.git"
Issues = "https://github.com/vishalm/semantic-evaluation-lab/issues"
Documentation = "https://github.com/vishalm/semantic-evaluation-lab#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["config*", "basic_agent*"]
exclude = ["tests*", "venv*", ".venv*"]

[tool.setuptools_scm]
write_to = "_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["venv/*", ".venv/*", "build/*", "dist/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "venv/",
    ".venv/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-exclude=tests/*",
    "--cov-exclude=venv/*",
    "--cov-exclude=.venv/*",
    "--junitxml=test-results.xml",
    "--html=test-report.html",
    "--self-contained-html",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "functional: Functional tests", 
    "integration: Integration tests",
    "llm_eval: LLM evaluation tests using DeepEval",
    "deepeval: DeepEval framework tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "__pycache__/*",
    "*.pyc",
    ".git/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used test

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
]

[tool.deepeval]
# DeepEval configuration
testpath = "tests/llm_evaluation"
cache_folder = ".deepeval_cache" 